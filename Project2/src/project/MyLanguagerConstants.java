/* Generated By:JJTree&JavaCC: Do not edit this line. MyLanguagerConstants.java */
package project;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface MyLanguagerConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int IF = 7;
  /** RegularExpression Id. */
  int ELSE = 8;
  /** RegularExpression Id. */
  int WHILE = 9;
  /** RegularExpression Id. */
  int FOR = 10;
  /** RegularExpression Id. */
  int MAIN = 11;
  /** RegularExpression Id. */
  int VOID = 12;
  /** RegularExpression Id. */
  int INT = 13;
  /** RegularExpression Id. */
  int FLOAT = 14;
  /** RegularExpression Id. */
  int DOUBLE = 15;
  /** RegularExpression Id. */
  int PRINT = 16;
  /** RegularExpression Id. */
  int SCAN = 17;
  /** RegularExpression Id. */
  int RETURN = 18;
  /** RegularExpression Id. */
  int OBRACKET = 19;
  /** RegularExpression Id. */
  int CBRACKET = 20;
  /** RegularExpression Id. */
  int STRING = 21;
  /** RegularExpression Id. */
  int ASIGN = 22;
  /** RegularExpression Id. */
  int PLUS = 23;
  /** RegularExpression Id. */
  int MINUS = 24;
  /** RegularExpression Id. */
  int MULTIPLY = 25;
  /** RegularExpression Id. */
  int DIVIDE = 26;
  /** RegularExpression Id. */
  int EQUAL = 27;
  /** RegularExpression Id. */
  int INCREMENT = 28;
  /** RegularExpression Id. */
  int REM = 29;
  /** RegularExpression Id. */
  int LT = 30;
  /** RegularExpression Id. */
  int GT = 31;
  /** RegularExpression Id. */
  int LTE = 32;
  /** RegularExpression Id. */
  int GTE = 33;
  /** RegularExpression Id. */
  int EQ = 34;
  /** RegularExpression Id. */
  int AND = 35;
  /** RegularExpression Id. */
  int OR = 36;
  /** RegularExpression Id. */
  int NOT = 37;
  /** RegularExpression Id. */
  int TERM = 38;
  /** RegularExpression Id. */
  int Int = 39;
  /** RegularExpression Id. */
  int Float = 40;
  /** RegularExpression Id. */
  int DIGIT = 41;
  /** RegularExpression Id. */
  int ID = 42;
  /** RegularExpression Id. */
  int Letter = 43;
  /** RegularExpression Id. */
  int String = 44;
  /** RegularExpression Id. */
  int STOP = 45;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\n\"",
    "<token of kind 5>",
    "<token of kind 6>",
    "\"if\"",
    "\"else\"",
    "\"while\"",
    "\"for\"",
    "\"main\"",
    "\"void\"",
    "\"int\"",
    "\"float\"",
    "\"double\"",
    "\"print\"",
    "\"scan\"",
    "\"$\"",
    "\"(\"",
    "\")\"",
    "\"string\"",
    "\":\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"=\"",
    "\"++\"",
    "\"%\"",
    "\"<\"",
    "\">\"",
    "\"<=\"",
    "\">=\"",
    "\"==\"",
    "\"&\"",
    "\"|\"",
    "\"~\"",
    "<TERM>",
    "<Int>",
    "<Float>",
    "<DIGIT>",
    "<ID>",
    "<Letter>",
    "<String>",
    "\";\"",
  };

}
